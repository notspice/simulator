const std = @import("std");

const errors = @import("errors.zig");
const InitError = errors.InitError;

const Node = struct {
    // ??????????????????
};

const Input = struct {
    // ??????????????????
};

const Simulator = struct {
    nodes: std.ArrayList(Node),

    pub fn init(self: *Simulator, text_netlist: [:0]u8) InitError!void {
        _ = self;
        _ = text_netlist;

        // ??????????????????
    }

    pub fn reset(self: *Simulator, input_states: []Input) void {
        _ = self;
        _ = input_states;

        // ??????????????????
    }

    pub fn tick(self: *Simulator, input_states: []Input) void {
        _ = self;
        _ = input_states;

        // ??????????????????
    }

    pub fn get_node_state(self: Simulator, node_index: u32) bool {
        _ = self;
        _ = node_index;

        // ??????????????????
    }
};
